[comment encoding = UTF-8 /]
[**
 * The documentation of the module generate.
 */]
[module generate('http://DataWebDeskDSL.com')]


[**
 * The documentation of the template generateDataWebDesk.
 * @param aDataWebDesk
 */]
[template public generateDataWebDesk(aDataWebDesk : DataWebDesk)]
[comment @main/]
[file ('home/Main.java', false, 'UTF-8')]
package home;
import home.Keyin;

[generateKeyin(aDataWebDesk)/]
[for (r:Rol | aDataWebDesk.rol)]
import rol.[r.NombreRol/];
[/for]

public class Main{
	
	public void generateDWD(){
		System.out.println("Nombre de la aplicación: [aDataWebDesk.nombreAplicacion/]");
		System.out.println("Roles de acceso a la información:");
		int i=0;
		System.out.println(i+". Salir");
		i++;
		[for(r : Rol | aDataWebDesk.rol)]
		[generateRol(r)/]
		System.out.println(i+". [r.NombreRol/]");
		i++;
		[/for]
		System.out.println("");
		System.out.println("");

 		int keyPressed = Keyin.inInt("Selecciona una opción ['['/]0-(i-1)]");

		while(keyPressed < 0 ||  keyPressed > (i-1)) {
			System.out.println("Error: Opción no encontrada");
			keyPressed = Keyin.inInt("Selecciona una opción ['['/]0-(i-1)]");
		}

		switch (keyPressed) {
			case 0:
				System.out.println("Saliendo de la aplicación");
	      	break;
		[for(r : Rol | aDataWebDesk.rol)]
			case [aDataWebDesk.rol->indexOf(r)/]:
				[r.NombreRol/] r = new [r.NombreRol/]();
			break;
		[/for]
		}
	}
	
	public static void main(String['['/]] args) {
		Main m = new Main();
		m.generateDWD();

	}
}
[/file]
[/template]

[template public generateRRSS(aPagina : Pagina)]
System.out.println("Redes sociales:");

[for (rs: RedSocial | aPagina.muestra)]
System.out.println("[rs.ID_RedSocial/]: [rs.nombre/]");
[/for]

[for (url: URLExterna | aPagina.urlexterna)]
System.out.println("Web: [url.nombreWeb/]: [url.Link/]");
[/for]
	
[/template]

[template public generateRol(aRol : Rol)]
[file ('rol/'+aRol.NombreRol+'.java', false, 'UTF-8')]
package rol;
import home.Keyin;
[for(e : Entidad | aRol.tiene_acceso->closure(accede)->selectByKind(PagCRUD).tiene_asociada->asSet())]
import [e.nombreEntidad/].*;
[/for]

public class [aRol.NombreRol.toUpperFirst()/]{
	public [aRol.NombreRol.toUpperFirst()/]() {
		System.out.println("Pantalla principal de Rol [aRol.NombreRol/]");
		System.out.println("Listado de páginas a las que tiene acceso:");
		System.out.println("0 Salir");

		[for (p: Pagina | aRol.tiene_acceso->closure(accede))]
		[if(p.oclIsTypeOf(PaginasNormales))]
		System.out.println([aRol.tiene_acceso->closure(accede)->asOrderedSet()->indexOf(p)/]+" [p.TituloPag/]");			
		[else]
		[if(not p.oclIsTypeOf(PaginaPrincipal))]
		System.out.println( [aRol.tiene_acceso->closure(accede)->asOrderedSet()->indexOf(p)/] +"[p.oclAsType(PagCRUD).tiene_asociada.nombreEntidad/] [p.TituloPag/]");
		[/if]
		[/if]		
		[/for]

		System.out.println("");
		System.out.println("");
		System.out.println("Selecciona una opción ['['/]0-[aRol.tiene_acceso->closure(accede)->excluding(oclIsTypeOf(PaginaPrincipal))->size()/]]");

		int keyPressed = Keyin.inInt("Selecciona una opción ['['/]0-[aRol.tiene_acceso->closure(accede)->excluding(oclIsTypeOf(PaginaPrincipal))->size()/]]");

		while(keyPressed < 0 ||  keyPressed > [aRol.tiene_acceso->closure(accede)->excluding(oclIsTypeOf(PaginaPrincipal))->size()/]) {
			System.out.println("Error: Opción no encontrada");
			keyPressed = Keyin.inInt("Selecciona una opción ['['/]0-[aRol.tiene_acceso->closure(accede)->excluding(oclIsTypeOf(PaginaPrincipal))->size()/]]");
		}

		switch (keyPressed) {
			case 0:
				System.out.println("Saliendo de la aplicación");
	      	break;

		[for (p: Pagina | aRol.tiene_acceso->closure(accede)->excluding(oclIsTypeOf(PaginaPrincipal)))]
			case [aRol.tiene_acceso->closure(accede)->excluding(oclIsTypeOf(PaginaPrincipal))->asOrderedSet()->indexOf(p)/]:
			[if(p.oclIsTypeOf(PaginasNormales))]
				[p.TituloPag/] [p.TituloPag.toLowerCase()/] = new [p.TituloPag/](); 
			[else]
				[generatePaginaCRUD(aRol, p)/]
			break;
			[/if]
		[/for]

		}
	}
}

[/file]
[/template]

[template public generatePaginaCRUD (aRol : Rol, aPagina : Pagina)]
[if (aPagina.oclIsKindOf(PagIndice))]
Indice_[aPagina.oclAsType(PagIndice).tiene_asociada.nombreEntidad/] p = new [aPagina.oclAsType(PagIndice).tiene_asociada.nombreEntidad/]();	
[generatePagina(aRol, aPagina.oclAsType(PagIndice))/]	
[/if]
[if (aPagina.oclIsKindOf(PagLeer))]
Detalles_[aPagina.oclAsType(PagLeer).tiene_asociada.nombreEntidad/] p = new [aPagina.oclAsType(PagLeer).tiene_asociada.nombreEntidad/]();	
[generatePagina(aRol, aPagina.oclAsType(PagLeer))/]	
[/if]
[if (aPagina.oclIsKindOf(PagBorrar))]
Borrar_[aPagina.oclAsType(PagBorrar).tiene_asociada.nombreEntidad/] p = new [aPagina.oclAsType(PagBorrar).tiene_asociada.nombreEntidad/]();	
[generatePagina(aRol, aPagina.oclAsType(PagBorrar))/]	
[/if]
[if (aPagina.oclIsKindOf(PagCrear))]
Crear_[aPagina.oclAsType(PagCrear).tiene_asociada.nombreEntidad/] p = new [aPagina.oclAsType(PagCrear).tiene_asociada.nombreEntidad/]();	
[generatePagina(aRol, aPagina.oclAsType(PagCrear))/]	
[/if]
[if (aPagina.oclIsKindOf(CRUD))]
CRUD_[aPagina.oclAsType(CRUD).tiene_asociada.nombreEntidad/] p = new [aPagina.oclAsType(CRUD).tiene_asociada.nombreEntidad/]();	
[generatePagina(aRol, aPagina.oclAsType(CRUD))/]	
[/if]
[/template]

[template public generatePagina(aRol : Rol, aIndice : PagIndice)]
[file (aIndice.tiene_asociada.nombreEntidad+'/Indice_'+aIndice.tiene_asociada.nombreEntidad+'.java', false, 'UTF-8')]
package [aIndice.tiene_asociada.nombreEntidad/];
import home.Keyin;

public class Indice_[aIndice.tiene_asociada.nombreEntidad.toUpperFirst()/]{
	public Indice_[aIndice.tiene_asociada.nombreEntidad.toUpperFirst()/]() {
		System.out.println("Pantalla índice de [aIndice.tiene_asociada.nombreEntidad/] Rol [aRol.NombreRol/]");

		[generateRRSS(aIndice)/]

		System.out.println("Listado de páginas a las que tiene acceso:");

		[for (p: Pagina | aIndice.oclAsType(Pagina)->closure(accede))]
		[if(p.oclIsTypeOf(PaginasNormales))]
		System.out.println([aIndice.oclAsType(Pagina)->closure(accede)->asOrderedSet()->indexOf(p)/]+" [p.TituloPag/]");			
		[else]
		[if(not p.oclIsTypeOf(PaginaPrincipal))]
		System.out.println( [aIndice.oclAsType(Pagina)->closure(accede)->asOrderedSet()->indexOf(p)/] +"[p.oclAsType(PagCRUD).tiene_asociada.nombreEntidad/] [p.TituloPag/]");
		[/if]
		[/if]		
		[/for]

		System.out.println("");
		System.out.println("");
		System.out.println("Selecciona una opción ['['/]0-[aIndice.oclAsType(Pagina)->closure(accede)->size()/]]");

				int keyPressed = Keyin.inInt("Selecciona una opción ['['/]0-[aIndice.oclAsType(Pagina)->closure(accede)->size()/]]");

		while(keyPressed < 0 ||  keyPressed > [aIndice.oclAsType(Pagina)->closure(accede)->size()/]) {
			System.out.println("Error: Opción no encontrada");
			keyPressed = Keyin.inInt("Selecciona una opción ['['/]0-[aIndice.oclAsType(Pagina)->closure(accede)->size()/]]");
		}

		switch (keyPressed) {
			case 0:
				System.out.println("Saliendo de la aplicación");
	      	break;
		[for (p: Pagina | aIndice.oclAsType(Pagina)->closure(accede))]
			case [aIndice.oclAsType(Pagina)->closure(accede)->indexOf(p)/]:
				[p.eGet('Class')/] p = new [p.eGet('Class')/]();
			break;
		[/for]
		}
	}
}

[/file]
[/template]

[template public generatePagina(aRol : Rol, aDetalle : PagLeer)]
[file (aDetalle.tiene_asociada.nombreEntidad+'/Detalle_'+aDetalle.tiene_asociada.nombreEntidad+'.java', false, 'UTF-8')]
package [aDetalle.tiene_asociada.nombreEntidad/];
import home.Keyin;
	
public class Detalle_[aDetalle.tiene_asociada.nombreEntidad.toUpperFirst()/]{
	public Detalle_[aDetalle.tiene_asociada.nombreEntidad.toUpperFirst()/]() {

		System.out.println("Pantalla detalle de [aDetalle.tiene_asociada.nombreEntidad/] Rol [aDetalle.accedida_por.NombreRol/]");
		
		[generateRRSS(aDetalle)/]

		System.out.println("Campos:");
		[for(c : CaracteristicaEntidad | aDetalle.tiene_asociada.caracteristica)]
		System.out.println("-[c.nombreCaract/]: valor // ([c.TDato/])");	
		[/for]
		[for(e : Entidad | aDetalle.tiene_asociada.esta_relacionada)]
		System.out.println("-Id_[e.nombreEntidad/]: [e.ID_Entidad/] // Referencia a [e.nombreEntidad/]");	
		[/for]

		System.out.println("Listado de opciones:");
		System.out.println("1. Borrar [aDetalle.tiene_asociada.nombreEntidad/]");
		[for(e : Entidad | aDetalle.tiene_asociada.esta_relacionada)]
		System.out.println("[aDetalle.tiene_asociada.esta_relacionada->indexOf(e)+2/]. Consultar detalles de [e.ID_Entidad/] // Referencia a [e.nombreEntidad/]");	
		[/for]
		System.out.println("4. Volver");
	}
}

[/file]
[/template]

[template public generatePagina(aRol : Rol, aBorrar : PagBorrar)]
[file (aBorrar.tiene_asociada.nombreEntidad+'/Borrar_'+aBorrar.tiene_asociada.nombreEntidad+'.java', false, 'UTF-8')]
package [aBorrar.tiene_asociada.nombreEntidad/];
import home.Keyin;
	
public class Borrar_[aBorrar.tiene_asociada.nombreEntidad.toUpperFirst()/]{
	public Borrar_[aBorrar.tiene_asociada.nombreEntidad.toUpperFirst()/]() {

		System.out.println("Pantalla Borrar de [aBorrar.tiene_asociada.nombreEntidad/] Rol [aBorrar.accedida_por.NombreRol/]");
		
		[generateRRSS(aBorrar)/]

		System.out.println("Listado de [aBorrar.tiene_asociada.nombreEntidad/]");
		System.out.println("AQUI VAN LOS DATOS TODO");	
		System.out.println("Salir");	
	}
}

[/file]
[/template]

[template public generatePagina(aEntidad : Entidad, aBorrar : PagBorrar)]
[file ('BorrarConfirmacion_'+aEntidad.nombreEntidad+'.java', false, 'UTF-8')]
	
public class BorrarConfirmacion_[aEntidad.nombreEntidad.toUpperFirst()/]{
	public Borrar_[aEntidad.nombreEntidad.toUpperFirst()/]() {

		System.out.println("Pantalla Borrar de [aEntidad.nombreEntidad/]");
		
		[generateRRSS(aBorrar)/]

		System.out.println(">> Asignatura borrada");

		System.out.println("Nota: No se eliminan los datos correspondiente a las referencias de [aEntidad.nombreEntidad/]:");

		[for(e : Entidad | aEntidad.esta_relacionada)]
		System.out.println("-Id_[e.nombreEntidad/]: [e.ID_Entidad/] // Referencia a [e.nombreEntidad/]");	
		[/for]
	
		System.out.println("Pulsa 0 para salir");
	}
}

[/file]
[/template]

[template public generatePagina(aRol : Rol, aCrear : PagCrear)]
[file (aCrear.tiene_asociada.nombreEntidad+'/Crear_'+aCrear.tiene_asociada.nombreEntidad+'.java', false, 'UTF-8')]
package [aCrear.tiene_asociada.nombreEntidad/];
import home.Keyin;
	
public class Crear_[aCrear.tiene_asociada.nombreEntidad.toUpperFirst()/]{
	public Crear_[aCrear.tiene_asociada.nombreEntidad.toUpperFirst()/]() {

		System.out.println("Pantalla Crear de [aCrear.tiene_asociada.nombreEntidad/]");
		
		[generateRRSS(aCrear)/]

		System.out.println("Introduzca la información correspondiente a los siguientes campos:");
		[for(c : CaracteristicaEntidad | aCrear.tiene_asociada.caracteristica)]
		System.out.println("-[c.nombreCaract/]: valor // ([c.TDato/])");	
		[/for]
		[for(e : Entidad | aCrear.tiene_asociada.esta_relacionada)]
		System.out.println("-Id_[e.nombreEntidad/]: [e.ID_Entidad/] // Referencia a [e.nombreEntidad/]");	
		[/for]

		System.out.println("Listado de opciones:");
		System.out.println("1. Aceptar -> Crear la asignatura -> Salir");
		System.out.println("2. Cancelar -> Salir");
	}
}

[/file]
[/template]

[template public generatePagina(aRol : Rol, aCRUD : CRUD)]
[file (aCRUD.tiene_asociada.nombreEntidad+'/CRUD_'+aCRUD.tiene_asociada.nombreEntidad+'.java', false, 'UTF-8')]
package [aCRUD.tiene_asociada.nombreEntidad/];
import home.Keyin;
	
public class CRUD_[aCRUD.tiene_asociada.nombreEntidad.toUpperFirst()/]{
	public CRUD_[aCRUD.tiene_asociada.nombreEntidad.toUpperFirst()/]() {

		System.out.println("Pantalla CRUD de [aCRUD.tiene_asociada.nombreEntidad/]");
		
		[generateRRSS(aCRUD)/]

		System.out.println("Listado de [aCRUD.tiene_asociada.nombreEntidad/]");
		System.out.println("0. Salir");
		System.out.println("1. Listar");
		System.out.println("2. Crear un nuevo elemento");
		System.out.println("3. Borrar un elemento");	
		
		System.out.println("Selecciona una opción ['['/]0-3]");	
	}
}

[/file]
[/template]

[template public generateKeyin(aDataWebDesk : DataWebDesk)]
[file ('home/Keyin.java', false, 'UTF-8')]
	
package home;

public class Keyin {

  //*******************************
  //   support methods
  //*******************************
  //Method to display the user's prompt string
  public static void printPrompt(String prompt) {
    System.out.print(prompt + " ");
    System.out.flush();
  }

  //Method to make sure no data is available in the
  //input stream
  public static void inputFlush() {
    int dummy;
    int bAvail;

    try {
      while ((System.in.available()) != 0)
        dummy = System.in.read();
    } catch (java.io.IOException e) {
      System.out.println("Input error");
    }
  }
  public static String inString() {
    int aChar;
    String s = "";
    boolean finished = false;

    while (!finished) {
      try {
        aChar = System.in.read();
        if (aChar < 0 || (char) aChar == '\n')
          finished = true;
        else if ((char) aChar != '\r')
          s = s + (char) aChar; // Enter into string
      }

      catch (java.io.IOException e) {
        System.out.println("Input error");
        finished = true;
      }
    }
    return s;
  }

  public static int inInt(String prompt) {
    while (true) {
      inputFlush();
      printPrompt(prompt);
      try {
        return Integer.valueOf(inString().trim()).intValue();
      }

      catch (NumberFormatException e) {
        System.out.println("Invalid input. Not an integer");
      }
    }
  }

}

[/file]
[/template]