/**
 */
package DataWebDeskDSL.provider;

import DataWebDeskDSL.util.DataWebDeskDSLAdapterFactory;

import java.util.ArrayList;
import java.util.Collection;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.edit.provider.ChangeNotifier;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
import org.eclipse.emf.edit.provider.IChangeNotifier;
import org.eclipse.emf.edit.provider.IDisposable;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.INotifyChangedListener;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;

/**
 * This is the factory that is used to provide the interfaces needed to support Viewers.
 * The adapters generated by this factory convert EMF adapter notifications into calls to {@link #fireNotifyChanged fireNotifyChanged}.
 * The adapters also support Eclipse property sheets.
 * Note that most of the adapters are shared among multiple instances.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @generated
 */
public class DataWebDeskDSLItemProviderAdapterFactory extends DataWebDeskDSLAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
	/**
	 * This keeps track of the root adapter factory that delegates to this adapter factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ComposedAdapterFactory parentAdapterFactory;

	/**
	 * This is used to implement {@link org.eclipse.emf.edit.provider.IChangeNotifier}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IChangeNotifier changeNotifier = new ChangeNotifier();

	/**
	 * This keeps track of all the supported types checked by {@link #isFactoryForType isFactoryForType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Collection<Object> supportedTypes = new ArrayList<Object>();

	/**
	 * This constructs an instance.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public DataWebDeskDSLItemProviderAdapterFactory() {
		supportedTypes.add(IEditingDomainItemProvider.class);
		supportedTypes.add(IStructuredItemContentProvider.class);
		supportedTypes.add(ITreeItemContentProvider.class);
		supportedTypes.add(IItemLabelProvider.class);
		supportedTypes.add(IItemPropertySource.class);
	}

	/**
	 * This keeps track of the one adapter used for all {@link DataWebDeskDSL.DataWebDesk} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DataWebDeskItemProvider dataWebDeskItemProvider;

	/**
	 * This creates an adapter for a {@link DataWebDeskDSL.DataWebDesk}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDataWebDeskAdapter() {
		if (dataWebDeskItemProvider == null) {
			dataWebDeskItemProvider = new DataWebDeskItemProvider(this);
		}

		return dataWebDeskItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link DataWebDeskDSL.PaginasNormales} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PaginasNormalesItemProvider paginasNormalesItemProvider;

	/**
	 * This creates an adapter for a {@link DataWebDeskDSL.PaginasNormales}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPaginasNormalesAdapter() {
		if (paginasNormalesItemProvider == null) {
			paginasNormalesItemProvider = new PaginasNormalesItemProvider(this);
		}

		return paginasNormalesItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link DataWebDeskDSL.Entidad} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EntidadItemProvider entidadItemProvider;

	/**
	 * This creates an adapter for a {@link DataWebDeskDSL.Entidad}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEntidadAdapter() {
		if (entidadItemProvider == null) {
			entidadItemProvider = new EntidadItemProvider(this);
		}

		return entidadItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link DataWebDeskDSL.CaracteristicaEntidad} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CaracteristicaEntidadItemProvider caracteristicaEntidadItemProvider;

	/**
	 * This creates an adapter for a {@link DataWebDeskDSL.CaracteristicaEntidad}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCaracteristicaEntidadAdapter() {
		if (caracteristicaEntidadItemProvider == null) {
			caracteristicaEntidadItemProvider = new CaracteristicaEntidadItemProvider(this);
		}

		return caracteristicaEntidadItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link DataWebDeskDSL.PagCrear} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PagCrearItemProvider pagCrearItemProvider;

	/**
	 * This creates an adapter for a {@link DataWebDeskDSL.PagCrear}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPagCrearAdapter() {
		if (pagCrearItemProvider == null) {
			pagCrearItemProvider = new PagCrearItemProvider(this);
		}

		return pagCrearItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link DataWebDeskDSL.PagLeer} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PagLeerItemProvider pagLeerItemProvider;

	/**
	 * This creates an adapter for a {@link DataWebDeskDSL.PagLeer}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPagLeerAdapter() {
		if (pagLeerItemProvider == null) {
			pagLeerItemProvider = new PagLeerItemProvider(this);
		}

		return pagLeerItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link DataWebDeskDSL.PagBorrar} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PagBorrarItemProvider pagBorrarItemProvider;

	/**
	 * This creates an adapter for a {@link DataWebDeskDSL.PagBorrar}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPagBorrarAdapter() {
		if (pagBorrarItemProvider == null) {
			pagBorrarItemProvider = new PagBorrarItemProvider(this);
		}

		return pagBorrarItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link DataWebDeskDSL.PagActualizar} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PagActualizarItemProvider pagActualizarItemProvider;

	/**
	 * This creates an adapter for a {@link DataWebDeskDSL.PagActualizar}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPagActualizarAdapter() {
		if (pagActualizarItemProvider == null) {
			pagActualizarItemProvider = new PagActualizarItemProvider(this);
		}

		return pagActualizarItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link DataWebDeskDSL.Rol} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RolItemProvider rolItemProvider;

	/**
	 * This creates an adapter for a {@link DataWebDeskDSL.Rol}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRolAdapter() {
		if (rolItemProvider == null) {
			rolItemProvider = new RolItemProvider(this);
		}

		return rolItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link DataWebDeskDSL.Twitter} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TwitterItemProvider twitterItemProvider;

	/**
	 * This creates an adapter for a {@link DataWebDeskDSL.Twitter}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTwitterAdapter() {
		if (twitterItemProvider == null) {
			twitterItemProvider = new TwitterItemProvider(this);
		}

		return twitterItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link DataWebDeskDSL.Facebook} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FacebookItemProvider facebookItemProvider;

	/**
	 * This creates an adapter for a {@link DataWebDeskDSL.Facebook}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFacebookAdapter() {
		if (facebookItemProvider == null) {
			facebookItemProvider = new FacebookItemProvider(this);
		}

		return facebookItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link DataWebDeskDSL.PagIndice} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PagIndiceItemProvider pagIndiceItemProvider;

	/**
	 * This creates an adapter for a {@link DataWebDeskDSL.PagIndice}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPagIndiceAdapter() {
		if (pagIndiceItemProvider == null) {
			pagIndiceItemProvider = new PagIndiceItemProvider(this);
		}

		return pagIndiceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link DataWebDeskDSL.CRUD} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CRUDItemProvider crudItemProvider;

	/**
	 * This creates an adapter for a {@link DataWebDeskDSL.CRUD}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCRUDAdapter() {
		if (crudItemProvider == null) {
			crudItemProvider = new CRUDItemProvider(this);
		}

		return crudItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link DataWebDeskDSL.URLExterna} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected URLExternaItemProvider urlExternaItemProvider;

	/**
	 * This creates an adapter for a {@link DataWebDeskDSL.URLExterna}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createURLExternaAdapter() {
		if (urlExternaItemProvider == null) {
			urlExternaItemProvider = new URLExternaItemProvider(this);
		}

		return urlExternaItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link DataWebDeskDSL.PaginaPrincipal} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PaginaPrincipalItemProvider paginaPrincipalItemProvider;

	/**
	 * This creates an adapter for a {@link DataWebDeskDSL.PaginaPrincipal}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPaginaPrincipalAdapter() {
		if (paginaPrincipalItemProvider == null) {
			paginaPrincipalItemProvider = new PaginaPrincipalItemProvider(this);
		}

		return paginaPrincipalItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link DataWebDeskDSL.RSS} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RSSItemProvider rssItemProvider;

	/**
	 * This creates an adapter for a {@link DataWebDeskDSL.RSS}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRSSAdapter() {
		if (rssItemProvider == null) {
			rssItemProvider = new RSSItemProvider(this);
		}

		return rssItemProvider;
	}

	/**
	 * This returns the root adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public ComposeableAdapterFactory getRootAdapterFactory() {
		return parentAdapterFactory == null ? this : parentAdapterFactory.getRootAdapterFactory();
	}

	/**
	 * This sets the composed adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setParentAdapterFactory(ComposedAdapterFactory parentAdapterFactory) {
		this.parentAdapterFactory = parentAdapterFactory;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public boolean isFactoryForType(Object type) {
		return supportedTypes.contains(type) || super.isFactoryForType(type);
	}

	/**
	 * This implementation substitutes the factory itself as the key for the adapter.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter adapt(Notifier notifier, Object type) {
		return super.adapt(notifier, this);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Object adapt(Object object, Object type) {
		if (isFactoryForType(type)) {
			Object adapter = super.adapt(object, type);
			if (!(type instanceof Class<?>) || (((Class<?>)type).isInstance(adapter))) {
				return adapter;
			}
		}

		return null;
	}

	/**
	 * This adds a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void addListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.addListener(notifyChangedListener);
	}

	/**
	 * This removes a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void removeListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.removeListener(notifyChangedListener);
	}

	/**
	 * This delegates to {@link #changeNotifier} and to {@link #parentAdapterFactory}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void fireNotifyChanged(Notification notification) {
		changeNotifier.fireNotifyChanged(notification);

		if (parentAdapterFactory != null) {
			parentAdapterFactory.fireNotifyChanged(notification);
		}
	}

	/**
	 * This disposes all of the item providers created by this factory. 
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void dispose() {
		if (dataWebDeskItemProvider != null) dataWebDeskItemProvider.dispose();
		if (paginasNormalesItemProvider != null) paginasNormalesItemProvider.dispose();
		if (entidadItemProvider != null) entidadItemProvider.dispose();
		if (caracteristicaEntidadItemProvider != null) caracteristicaEntidadItemProvider.dispose();
		if (pagCrearItemProvider != null) pagCrearItemProvider.dispose();
		if (pagLeerItemProvider != null) pagLeerItemProvider.dispose();
		if (pagBorrarItemProvider != null) pagBorrarItemProvider.dispose();
		if (pagActualizarItemProvider != null) pagActualizarItemProvider.dispose();
		if (rolItemProvider != null) rolItemProvider.dispose();
		if (twitterItemProvider != null) twitterItemProvider.dispose();
		if (facebookItemProvider != null) facebookItemProvider.dispose();
		if (pagIndiceItemProvider != null) pagIndiceItemProvider.dispose();
		if (crudItemProvider != null) crudItemProvider.dispose();
		if (urlExternaItemProvider != null) urlExternaItemProvider.dispose();
		if (paginaPrincipalItemProvider != null) paginaPrincipalItemProvider.dispose();
		if (rssItemProvider != null) rssItemProvider.dispose();
	}

}
